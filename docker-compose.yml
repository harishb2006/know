version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: knowledge_assistant_db
    environment:
      POSTGRES_DB: knowledge_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    container_name: knowledge_assistant_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend (optional - can run locally)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: knowledge_assistant_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/knowledge_assistant
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: knowledge_assistant_network